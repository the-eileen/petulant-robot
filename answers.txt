# Fill in your name, student ID, and email address in this file.
# If you are working in a team, fill out the information for both team 
# members.

# SUBMIT THE LAB ONLY ONCE (from only one partner). This file will be
# automatically parsed in order to give both team members credit for the
# lab.

# You need to fill in the EXERCISE sections describing your solutions
# for Tasks 1, 2, and 3, as well as write the corresponding code.
# If you did one or more extra credit problems, indicate which one in the
# appropriate section below (remove the # sign first). If you have any other
# information you'd like us to know, please add it at the end of the file.

# Partner 1
Name: Jonathan Chu
Student ID: 804141479
Email: jonmchu@ucla.edu

# Partner 2 (if you're working in a team)
Name: Eileen The
Student ID: 104141878
Email: eileenthe@gmail.com

# EXERCISE 1: What method you used to make your peer download and upload
#    files in parallel?  (~1-3 sentences)
The peer downloads and uploads in parallel by forking new processes.

# EXERCISE 2A: What conditions did you find and fix that would have
#    triggered a buffer overrun bug?  (~1-3 sentences each)
	I changed the instances of strcpy to strncpy, using FILENAMESIZ to get the
size of the block that will be written. This prevents the strcpy from
continuously writing and instead forces it to always only write the block size

# EXERCISE 2B: What other robustness problems did you fix?  (~1-3 sentences
#    each)

# EXERCISE 3: Describe the attacks you implemented for "evil mode".  Why
#    are they attacks?  (~3-10 sentences each)
I implemented a buffer overflow attack. This is an attack since it does not give the peer the correct information. It would also corrupt the user's stack.

# Extra credit problems
#Extra credit problem: none

# Add any other information you'd like us to know below this line.
